from aiogram import Router, types, F
from aiogram.filters import Command

from webApp.handlers.request_django import get_user_request
from webApp.keyboard.inline_app import inline
from webApp.keyboard.inline_registration import inlines, cmd_start, up

router = Router()

@router.message(Command(commands=["start"]))
async def start(message: types.Message):
    await message.answer("–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ª–∏–±–æ –∑–∞–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!", reply_markup=cmd_start())


@router.message(F.text == 'üìù–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
async def text_received(message: types.Message):
    responses = get_user_request(tg_id=message.from_user.id)
    if message.text == 'üìù–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        if responses:
            await message.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        else:
            await message.answer("–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                                 reply_markup=inlines())

@router.message(F.text == 'üîë–í—Ö–æ–¥')
async def text_receive(message: types.Message):
    responses = get_user_request(tg_id=message.from_user.id)
    if message.text == 'üîë–í—Ö–æ–¥':
        tg_id = message.from_user.id
        if responses:
            await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=up(tg_id=tg_id)())
        else:
            await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

@router.message(F.contact)
async def contact_received(message: types.Message):
    tg_id = message.from_user.id
    tg_nickname = f"@{message.from_user.username}"
    if message.contact:
        phone_number = message.contact.phone_number
        await message.answer(f"–°–ø–∞—Å–∏–±–æ!", reply_markup=cmd_start())
        await message.answer("–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                             reply_markup=inline(tg_id, tg_nickname, phone_number))

@router.message(F.text == 'üö´–Ω–µ –¥–µ–ª–∏—Ç—å—Å—è')
async def text_received(message: types.Message):
    if message.text == 'üö´–Ω–µ –¥–µ–ª–∏—Ç—å—Å—è':
        await message.answer("—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ–∑ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–∞")
